<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd">

    <!--Spring容器优先加载由ServletContextListener（对应applicationContext.xml）产生的父容器，而SpringMVC（对应mvc_dispatcher_servlet.xml）产生的是子容器。子容器Controller进行扫描装配时装配的@Service注解的实例是没有经过事务加强处理，即没有事务处理能力的Service，而父容器进行初始化的Service是保证事务的增强处理能力的。
        如果不在子容器中将Service exclude掉，此时得到的将是原样的无事务处理能力的Service。
        use-default-filters="false"不会自动加载Component注解的类
    -->
    <context:component-scan base-package="com.yuanhang" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--解决使用responseBody注解返回String类型的中文乱码问题-->
    <!--或者再requestMapping上使用produces注解解决-->
    <bean id="utf8Charset" class="java.nio.charset.Charset"
          factory-method="forName">
        <constructor-arg value="UTF-8"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg ref="utf8Charset"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--如果是静态资源的请求则会交给默认的Servlet处理,相当于过滤掉静态资源-->
    <mvc:default-servlet-handler/>

    <!--配置文件解析器(id必须为multiPartResolver)-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!--注入异常处理组件-->
    <bean id="exceptionResolver" class="com.yuanhang.exception.ExceptionResolver"/>
    <!--注册登录状态拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/fore*"/>
            <bean class="com.yuanhang.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/fore*"/>
            <bean class="com.yuanhang.interceptor.OtherInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>